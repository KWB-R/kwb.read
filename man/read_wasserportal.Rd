% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_wasserportal_raw.R
\name{read_wasserportal}
\alias{read_wasserportal}
\title{Download and Read Data from wasserportal.berlin.de}
\usage{
read_wasserportal(station,
  variables = get_wasserportal_variables(station),
  from_date = "2019-01-01", include_raw_time = FALSE)
}
\arguments{
\item{station}{station number, as returned by 
\code{\link{get_wasserportal_stations}}}

\item{variables}{vector of variable identifiers, as returned by 
\code{\link{get_wasserportal_variables}}}

\item{from_date}{\code{Date} object (or string in format "yyyy-mm-dd" that 
can be converted to a \code{Date} object representing the first day for
which to request data}

\item{include_raw_time}{if \code{TRUE} the original time column and the 
column with the corrected winter time are included in the output. The
default is \code{FALSE}.}
}
\value{
data frame read from the CSV file that the download provides. 
  IMPORTANT: It is not yet clear how to interpret the timestamp, see example
}
\description{
This function downloads and reads CSV files from wasserportal.berlin.de.
}
\details{
The original timestamps (column \code{timestamps_raw} in the example below)
are not all plausible, e.g. "31.03.2019 03:00" appears twice! They are
corrected (column \code{timestamp_corr}) to represent a plausible sequence of
timestamps in Berlin Normal Time (UTC+01) Finally, a valid POSIXct timestamp
in timezone "Berlin/Europe" (UTC+01 in winter, UTC+02 in summer) is created,
together with the additional information of the UTC offset (column
\code{UTCOffset}, 1 in winter, 2 in summer).
}
\examples{
# Get a list of available water quality stations and variables
stations <- kwb.read::get_wasserportal_stations()
variables <- kwb.read::get_wasserportal_variables()

# Read the timeseries (multiple variables for one station)
water_quality <- kwb.read::read_wasserportal(
  station = stations$MPS_Charlottenburg,
  variables = c(variables["Sauerstoffgehalt"], variables["Leitfaehigkeit"]),
  from_date = "2019-03-01", include_raw_time = TRUE
)

# Look at the first few records
head(water_quality)

# Check the metadata
kwb.utils::getAttribute(water_quality, "metadata")

# Set missing values to NA
water_quality[water_quality == -777] <- NA

# Look at the first few records again
head(water_quality)

### How was the original timestamp interpreted?

# Determine the days at which summer time starts and ends, respectively
switches <- kwb.datetime::date_range_CEST(2019)

# Reformat to dd.mm.yyyy
switches <- kwb.datetime::reformatTimestamp(switches, "\%Y-\%m-\%d", "\%d.\%m.\%Y")

# Define a pattern to look for timestamps "around" the switches
pattern <- paste(switches, "0[1-4]", collapse = "|")

# Look at the data for these timestamps
water_quality[grepl(pattern, water_quality$timestamp_raw), ]

# The original timestamps (timestamps_raw) are not all plausible, e.g. 
# "31.03.2019 03:00" appears twice! See the Details in ?read_wasserportal()
# how this is treated.
}
