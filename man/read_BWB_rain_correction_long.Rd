% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bwb_rain_correction.R
\name{read_BWB_rain_correction_long}
\alias{read_BWB_rain_correction_long}
\title{Read BWB Rain Correction Data}
\usage{
read_BWB_rain_correction_long(
  files,
  sep = ";",
  country = c("de", "en")[1],
  date.format = "\%A \%d. \%B \%Y",
  locale = .localeString(country),
  wide = TRUE,
  dbg = TRUE
)
}
\arguments{
\item{files}{full path to CSV file containing rain height correction data in
"long" format}

\item{sep}{column separator in \code{files}}

\item{country}{one of "de" (German) or "en" (English) according to the format
numeric strings are given in}

\item{date.format}{format used to convert the date string into a date object}

\item{locale}{locale string, passed to
\code{\link{read_BWB_rain_correction_long}}}

\item{wide}{if \code{TRUE} (default) the data will be returned in "wide"
format, i.e. with the date in the first column and each further column 
representing a rain gauge}

\item{dbg}{logical. If \code{TRUE}, debug messages are shown.}
}
\value{
data frame either in "wide" format (with the date in the first column
  and the rain heights in the following columns named according to the
  "object ids" of the rain gauges) or in "long" format (with columns
  \code{Date}, \code{ObjNr} \code{Pumpwerk} \code{Niederschlag}). The mapping
  between object ids and gauge names is returned in the attribute "gauges".
}
\description{
Read BWB Rain Correction Data in "long" format. The data is provided by BWB
in the form of an Excel file. Save the file to CSV and run this function on
that CSV file.
}
\examples{
\dontrun{
# Provide the path to an example file in this package
file <- "Niederschlag_example.csv"
file <- system.file("extdata", file, package = "kwb.read")
  
# Read the CSV file into a data frame in "long" format
correction.wide <- read_BWB_rain_correction_long(file)
  
# Read the CSV file into a data frame in "wide" format (gauges in columns)
correction.long <- read_BWB_rain_correction_long(file, wide = FALSE)
  
# Get the mapping between object IDs and gauge names from attribute "gauges"
kwb.utils::getAttribute(correction.wide, "gauges")
}
}
